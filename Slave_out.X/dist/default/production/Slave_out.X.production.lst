

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Nov 14 22:54:15 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  008C                     	;# 
    47  0091                     	;# 
    48  0092                     	;# 
    49  0095                     	;# 
    50  0096                     	;# 
    51  0097                     	;# 
    52  0098                     	;# 
    53  0099                     	;# 
    54  009A                     	;# 
    55  009B                     	;# 
    56  009B                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009E                     	;# 
    60  010C                     	;# 
    61  0111                     	;# 
    62  0112                     	;# 
    63  0115                     	;# 
    64  0116                     	;# 
    65  0117                     	;# 
    66  0118                     	;# 
    67  0119                     	;# 
    68  011A                     	;# 
    69  011B                     	;# 
    70  011D                     	;# 
    71  011D                     	;# 
    72  018C                     	;# 
    73  0191                     	;# 
    74  0191                     	;# 
    75  0192                     	;# 
    76  0193                     	;# 
    77  0193                     	;# 
    78  0193                     	;# 
    79  0194                     	;# 
    80  0195                     	;# 
    81  0196                     	;# 
    82  0199                     	;# 
    83  019A                     	;# 
    84  019B                     	;# 
    85  019B                     	;# 
    86  019B                     	;# 
    87  019B                     	;# 
    88  019C                     	;# 
    89  019C                     	;# 
    90  019D                     	;# 
    91  019E                     	;# 
    92  019F                     	;# 
    93  020C                     	;# 
    94  0211                     	;# 
    95  0211                     	;# 
    96  0212                     	;# 
    97  0212                     	;# 
    98  0213                     	;# 
    99  0213                     	;# 
   100  0214                     	;# 
   101  0214                     	;# 
   102  0215                     	;# 
   103  0215                     	;# 
   104  0215                     	;# 
   105  0216                     	;# 
   106  0216                     	;# 
   107  0217                     	;# 
   108  0217                     	;# 
   109  0291                     	;# 
   110  0291                     	;# 
   111  0292                     	;# 
   112  0293                     	;# 
   113  0294                     	;# 
   114  0295                     	;# 
   115  0295                     	;# 
   116  0296                     	;# 
   117  0391                     	;# 
   118  0392                     	;# 
   119  0393                     	;# 
   120  039A                     	;# 
   121  039C                     	;# 
   122  039D                     	;# 
   123  039E                     	;# 
   124  039F                     	;# 
   125  0FE4                     	;# 
   126  0FE5                     	;# 
   127  0FE6                     	;# 
   128  0FE7                     	;# 
   129  0FE8                     	;# 
   130  0FE9                     	;# 
   131  0FEA                     	;# 
   132  0FEB                     	;# 
   133  0FED                     	;# 
   134  0FEE                     	;# 
   135  0FEF                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  008C                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  010C                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0115                     	;# 
   180  0116                     	;# 
   181  0117                     	;# 
   182  0118                     	;# 
   183  0119                     	;# 
   184  011A                     	;# 
   185  011B                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  018C                     	;# 
   189  0191                     	;# 
   190  0191                     	;# 
   191  0192                     	;# 
   192  0193                     	;# 
   193  0193                     	;# 
   194  0193                     	;# 
   195  0194                     	;# 
   196  0195                     	;# 
   197  0196                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019C                     	;# 
   205  019C                     	;# 
   206  019D                     	;# 
   207  019E                     	;# 
   208  019F                     	;# 
   209  020C                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0214                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0217                     	;# 
   225  0291                     	;# 
   226  0291                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0294                     	;# 
   230  0295                     	;# 
   231  0295                     	;# 
   232  0296                     	;# 
   233  0391                     	;# 
   234  0392                     	;# 
   235  0393                     	;# 
   236  039A                     	;# 
   237  039C                     	;# 
   238  039D                     	;# 
   239  039E                     	;# 
   240  039F                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  008C                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  010C                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0115                     	;# 
   296  0116                     	;# 
   297  0117                     	;# 
   298  0118                     	;# 
   299  0119                     	;# 
   300  011A                     	;# 
   301  011B                     	;# 
   302  011D                     	;# 
   303  011D                     	;# 
   304  018C                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0194                     	;# 
   312  0195                     	;# 
   313  0196                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019C                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  0211                     	;# 
   327  0211                     	;# 
   328  0212                     	;# 
   329  0212                     	;# 
   330  0213                     	;# 
   331  0213                     	;# 
   332  0214                     	;# 
   333  0214                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0216                     	;# 
   338  0216                     	;# 
   339  0217                     	;# 
   340  0217                     	;# 
   341  0291                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0295                     	;# 
   348  0296                     	;# 
   349  0391                     	;# 
   350  0392                     	;# 
   351  0393                     	;# 
   352  039A                     	;# 
   353  039C                     	;# 
   354  039D                     	;# 
   355  039E                     	;# 
   356  039F                     	;# 
   357  0FE4                     	;# 
   358  0FE5                     	;# 
   359  0FE6                     	;# 
   360  0FE7                     	;# 
   361  0FE8                     	;# 
   362  0FE9                     	;# 
   363  0FEA                     	;# 
   364  0FEB                     	;# 
   365  0FED                     	;# 
   366  0FEE                     	;# 
   367  0FEF                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0015                     	;# 
   384  0016                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001C                     	;# 
   392  001E                     	;# 
   393  001F                     	;# 
   394  008C                     	;# 
   395  0091                     	;# 
   396  0092                     	;# 
   397  0095                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009B                     	;# 
   405  009C                     	;# 
   406  009D                     	;# 
   407  009E                     	;# 
   408  010C                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011A                     	;# 
   417  011B                     	;# 
   418  011D                     	;# 
   419  011D                     	;# 
   420  018C                     	;# 
   421  0191                     	;# 
   422  0191                     	;# 
   423  0192                     	;# 
   424  0193                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0194                     	;# 
   428  0195                     	;# 
   429  0196                     	;# 
   430  0199                     	;# 
   431  019A                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019C                     	;# 
   438  019D                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  020C                     	;# 
   442  0211                     	;# 
   443  0211                     	;# 
   444  0212                     	;# 
   445  0212                     	;# 
   446  0213                     	;# 
   447  0213                     	;# 
   448  0214                     	;# 
   449  0214                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0215                     	;# 
   453  0216                     	;# 
   454  0216                     	;# 
   455  0217                     	;# 
   456  0217                     	;# 
   457  0291                     	;# 
   458  0291                     	;# 
   459  0292                     	;# 
   460  0293                     	;# 
   461  0294                     	;# 
   462  0295                     	;# 
   463  0295                     	;# 
   464  0296                     	;# 
   465  0391                     	;# 
   466  0392                     	;# 
   467  0393                     	;# 
   468  039A                     	;# 
   469  039C                     	;# 
   470  039D                     	;# 
   471  039E                     	;# 
   472  039F                     	;# 
   473  0FE4                     	;# 
   474  0FE5                     	;# 
   475  0FE6                     	;# 
   476  0FE7                     	;# 
   477  0FE8                     	;# 
   478  0FE9                     	;# 
   479  0FEA                     	;# 
   480  0FEB                     	;# 
   481  0FED                     	;# 
   482  0FEE                     	;# 
   483  0FEF                     	;# 
   484  0000                     	;# 
   485  0001                     	;# 
   486  0002                     	;# 
   487  0003                     	;# 
   488  0004                     	;# 
   489  0005                     	;# 
   490  0006                     	;# 
   491  0007                     	;# 
   492  0008                     	;# 
   493  0009                     	;# 
   494  000A                     	;# 
   495  000B                     	;# 
   496  000C                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0016                     	;# 
   502  0017                     	;# 
   503  0018                     	;# 
   504  0019                     	;# 
   505  001A                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  008C                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0095                     	;# 
   514  0096                     	;# 
   515  0097                     	;# 
   516  0098                     	;# 
   517  0099                     	;# 
   518  009A                     	;# 
   519  009B                     	;# 
   520  009B                     	;# 
   521  009C                     	;# 
   522  009D                     	;# 
   523  009E                     	;# 
   524  010C                     	;# 
   525  0111                     	;# 
   526  0112                     	;# 
   527  0115                     	;# 
   528  0116                     	;# 
   529  0117                     	;# 
   530  0118                     	;# 
   531  0119                     	;# 
   532  011A                     	;# 
   533  011B                     	;# 
   534  011D                     	;# 
   535  011D                     	;# 
   536  018C                     	;# 
   537  0191                     	;# 
   538  0191                     	;# 
   539  0192                     	;# 
   540  0193                     	;# 
   541  0193                     	;# 
   542  0193                     	;# 
   543  0194                     	;# 
   544  0195                     	;# 
   545  0196                     	;# 
   546  0199                     	;# 
   547  019A                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019B                     	;# 
   551  019B                     	;# 
   552  019C                     	;# 
   553  019C                     	;# 
   554  019D                     	;# 
   555  019E                     	;# 
   556  019F                     	;# 
   557  020C                     	;# 
   558  0211                     	;# 
   559  0211                     	;# 
   560  0212                     	;# 
   561  0212                     	;# 
   562  0213                     	;# 
   563  0213                     	;# 
   564  0214                     	;# 
   565  0214                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0216                     	;# 
   570  0216                     	;# 
   571  0217                     	;# 
   572  0217                     	;# 
   573  0291                     	;# 
   574  0291                     	;# 
   575  0292                     	;# 
   576  0293                     	;# 
   577  0294                     	;# 
   578  0295                     	;# 
   579  0295                     	;# 
   580  0296                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  039A                     	;# 
   585  039C                     	;# 
   586  039D                     	;# 
   587  039E                     	;# 
   588  039F                     	;# 
   589  0FE4                     	;# 
   590  0FE5                     	;# 
   591  0FE6                     	;# 
   592  0FE7                     	;# 
   593  0FE8                     	;# 
   594  0FE9                     	;# 
   595  0FEA                     	;# 
   596  0FEB                     	;# 
   597  0FED                     	;# 
   598  0FEE                     	;# 
   599  0FEF                     	;# 
   600  000C                     _PORTA	set	12
   601  0093                     _BCL1IF	set	147
   602  005F                     _GIE	set	95
   603  005E                     _PEIE	set	94
   604  008B                     _SSP1IF	set	139
   605  009D                     _ADCON0	set	157
   606  009E                     _ADCON1	set	158
   607  009C                     _ADRESH	set	156
   608  009B                     _ADRESL	set	155
   609  0099                     _OSCCON	set	153
   610  008C                     _TRISA	set	140
   611  0493                     _BCL1IE	set	1171
   612  04E9                     _GO_nDONE	set	1257
   613  048B                     _SSP1IE	set	1163
   614  010C                     _LATA	set	268
   615  018C                     _ANSELA	set	396
   616  0212                     _SSP1ADD	set	530
   617  0211                     _SSP1BUF	set	529
   618  0215                     _SSP1CON1	set	533
   619  0215                     _SSP1CON1bits	set	533
   620  0216                     _SSP1CON2bits	set	534
   621  0213                     _SSP1MSK	set	531
   622  0214                     _SSP1STAT	set	532
   623  0214                     _SSP1STATbits	set	532
   624                           
   625                           ; #config settings
   626  0000                     
   627                           	psect	cinit
   628  0063                     start_initialization:	
   629  0063                     __initialization:	
   630                           
   631                           ; Clear objects allocated to COMMON
   632  0063  01F9               	clrf	__pbssCOMMON& (0+127)
   633  0064  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   634                           
   635                           ; Clear objects allocated to BANK0
   636  0065  3020               	movlw	low __pbssBANK0
   637  0066  0084               	movwf	4
   638  0067  3000               	movlw	high __pbssBANK0
   639  0068  0085               	movwf	5
   640  0069  3012               	movlw	18
   641  006A  21E6               	fcall	clear_ram0
   642  006B                     end_of_initialization:	
   643                           ;End of C runtime variable initialization code
   644                           
   645  006B                     __end_of__initialization:	
   646  006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   647  006C  0020               	movlb	0
   648  006D  28F8               	ljmp	_main	;jump to C main() function
   649                           
   650                           	psect	bssCOMMON
   651  0079                     __pbssCOMMON:	
   652  0079                     _Rdtp:	
   653  0079                     	ds	1
   654  007A                     _Sdtp:	
   655  007A                     	ds	1
   656                           
   657                           	psect	bssBANK0
   658  0020                     __pbssBANK0:	
   659  0020                     _rcv_flg:	
   660  0020                     	ds	2
   661  0022                     _rcv:	
   662  0022                     	ds	8
   663  002A                     _snd:	
   664  002A                     	ds	8
   665                           
   666                           	psect	clrtext
   667  01E6                     clear_ram0:	
   668                           ;	Called with FSR0 containing the base address, and
   669                           ;	WREG with the size to clear
   670                           
   671  01E6  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  01E7                     clrloop0:	
   673  01E7  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  01E8  3101               	addfsr 0,1
   675  01E9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   676  01EA  29E7               	goto	clrloop0	;have we reached the end yet?
   677  01EB  3400               	retlw	0	;all done for this memory range, return
   678                           
   679                           	psect	cstackCOMMON
   680  0070                     __pcstackCOMMON:	
   681  0070                     ?_initOSCCON:	
   682  0070                     ?_i2cInterrupt:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_i2cInterrupt:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_main:	
   689                           ; 1 bytes @ 0x0
   690                           
   691                           
   692                           ; 1 bytes @ 0x0
   693  0070                     	ds	2
   694  0072                     i2cInterrupt@x:	
   695                           
   696                           ; 1 bytes @ 0x2
   697  0072                     	ds	1
   698  0073                     ??_initOSCCON:	
   699  0073                     ?_i2cInit:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ?_delay_ms:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     ?_delay_us:	
   706                           ; 1 bytes @ 0x3
   707                           
   708  0073                     ?_digitalWrite:	
   709                           ; 1 bytes @ 0x3
   710                           
   711  0073                     ?_i2cReceiveCheck:	
   712                           ; 1 bytes @ 0x3
   713                           
   714  0073                     digitalWrite@value:	
   715                           ; 2 bytes @ 0x3
   716                           
   717  0073                     i2cInit@address:	
   718                           ; 1 bytes @ 0x3
   719                           
   720  0073                     delay_ms@time:	
   721                           ; 2 bytes @ 0x3
   722                           
   723  0073                     delay_us@time:	
   724                           ; 2 bytes @ 0x3
   725                           
   726                           
   727                           ; 2 bytes @ 0x3
   728  0073                     	ds	1
   729  0074                     ??_digitalWrite:	
   730                           
   731                           ; 1 bytes @ 0x4
   732  0074                     	ds	1
   733  0075                     ??_i2cInit:	
   734  0075                     ??_i2cReceiveCheck:	
   735                           ; 1 bytes @ 0x5
   736                           
   737  0075                     ??_delay_ms:	
   738                           ; 1 bytes @ 0x5
   739                           
   740  0075                     ??_delay_us:	
   741                           ; 1 bytes @ 0x5
   742                           
   743  0075                     digitalWrite@pin:	
   744                           ; 1 bytes @ 0x5
   745                           
   746  0075                     i2cReceiveCheck@ans:	
   747                           ; 1 bytes @ 0x5
   748                           
   749                           
   750                           ; 2 bytes @ 0x5
   751  0075                     	ds	1
   752  0076                     delay_us@i:	
   753                           
   754                           ; 2 bytes @ 0x6
   755  0076                     	ds	1
   756  0077                     delay_ms@i:	
   757                           
   758                           ; 2 bytes @ 0x7
   759  0077                     	ds	1
   760  0078                     ?_pinMode:	
   761  0078                     pinMode@mode:	
   762                           ; 1 bytes @ 0x8
   763                           
   764                           
   765                           ; 1 bytes @ 0x8
   766  0078                     	ds	1
   767                           
   768                           	psect	cstackBANK0
   769  0032                     __pcstackBANK0:	
   770  0032                     ??_pinMode:	
   771                           
   772                           ; 1 bytes @ 0x0
   773  0032                     	ds	1
   774  0033                     pinMode@pin:	
   775                           
   776                           ; 1 bytes @ 0x1
   777  0033                     	ds	1
   778  0034                     ??_main:	
   779                           
   780                           ; 1 bytes @ 0x2
   781  0034                     	ds	1
   782  0035                     main@Mode:	
   783                           
   784                           ; 2 bytes @ 0x3
   785  0035                     	ds	2
   786                           
   787                           	psect	maintext
   788  00F8                     __pmaintext:	
   789 ;;
   790 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   791 ;;
   792 ;; *************** function _main *****************
   793 ;; Defined at:
   794 ;;		line 17 in file "main.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  Mode            2    3[BANK0 ] int 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : B1F/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1
   808 ;;      Params:         0       0       0
   809 ;;      Locals:         0       2       0
   810 ;;      Temps:          0       1       0
   811 ;;      Totals:         0       3       0
   812 ;;Total ram usage:        3 bytes
   813 ;; Hardware stack levels required when called:    3
   814 ;; This function calls:
   815 ;;		_delay_ms
   816 ;;		_digitalWrite
   817 ;;		_i2cInit
   818 ;;		_i2cReceiveCheck
   819 ;;		_initOSCCON
   820 ;;		_pinMode
   821 ;; This function is called by:
   822 ;;		Startup code after reset
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _main
   828  00F8                     _main:	
   829                           
   830                           ;main.c: 19: int Mode=0;
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   834  00F8  0020               	movlb	0	; select bank0
   835  00F9  01B5               	clrf	main@Mode
   836  00FA  01B6               	clrf	main@Mode+1
   837                           
   838                           ;main.c: 21: initOSCCON();
   839  00FB  21EC               	fcall	_initOSCCON
   840                           
   841                           ;main.c: 23: delay_ms(500);
   842  00FC  30F4               	movlw	244
   843  00FD  00F3               	movwf	delay_ms@time
   844  00FE  3001               	movlw	1
   845  00FF  00F4               	movwf	delay_ms@time+1
   846  0100  219F               	fcall	_delay_ms
   847                           
   848                           ;main.c: 25: pinMode((0),0x04);
   849  0101  3004               	movlw	4
   850  0102  0020               	movlb	0	; select bank0
   851  0103  00B4               	movwf	??_main
   852  0104  0834               	movf	??_main,w
   853  0105  00F8               	movwf	pinMode@mode
   854  0106  3000               	movlw	0
   855  0107  206E               	fcall	_pinMode
   856                           
   857                           ;main.c: 26: pinMode((4),0x04);
   858  0108  3004               	movlw	4
   859  0109  0020               	movlb	0	; select bank0
   860  010A  00B4               	movwf	??_main
   861  010B  0834               	movf	??_main,w
   862  010C  00F8               	movwf	pinMode@mode
   863  010D  3004               	movlw	4
   864  010E  206E               	fcall	_pinMode
   865                           
   866                           ;main.c: 27: digitalWrite((0),0);
   867  010F  01F3               	clrf	digitalWrite@value
   868  0110  3000               	movlw	0
   869  0111  2182               	fcall	_digitalWrite
   870                           
   871                           ;main.c: 28: digitalWrite((4),0);
   872  0112  01F3               	clrf	digitalWrite@value
   873  0113  3004               	movlw	4
   874  0114  2182               	fcall	_digitalWrite
   875                           
   876                           ;main.c: 29: i2cInit((0x00));
   877  0115  3000               	movlw	0
   878  0116  00F3               	movwf	i2cInit@address
   879  0117  00F4               	movwf	i2cInit@address+1
   880  0118  215E               	fcall	_i2cInit
   881                           
   882                           ;main.c: 30: snd[0]=(0x01);
   883  0119  0020               	movlb	0	; select bank0
   884  011A  01AA               	clrf	_snd
   885  011B  0AAA               	incf	_snd,f
   886  011C                     l1106:	
   887                           ;main.c: 32: while(1) {
   888                           
   889                           
   890                           ;main.c: 33: if (i2cReceiveCheck() != 0) {
   891  011C  21BB               	fcall	_i2cReceiveCheck
   892  011D  0873               	movf	?_i2cReceiveCheck,w
   893  011E  0474               	iorwf	?_i2cReceiveCheck+1,w
   894  011F  1903               	btfsc	3,2
   895  0120  291C               	goto	l1106
   896                           
   897                           ;main.c: 34: GIE=0;
   898  0121  138B               	bcf	11,7	;volatile
   899                           
   900                           ;main.c: 35: switch(Mode){
   901  0122  294E               	goto	l1130
   902  0123                     l1110:	
   903                           ;main.c: 36: case 0:
   904                           
   905                           
   906                           ;main.c: 37: SSP1ADD = rcv[0]<<1;
   907  0123  0020               	movlb	0	; select bank0
   908  0124  3522               	lslf	_rcv,w
   909  0125  0024               	movlb	4	; select bank4
   910  0126  0092               	movwf	18	;volatile
   911                           
   912                           ;main.c: 38: digitalWrite((0),1);
   913  0127  01F3               	clrf	digitalWrite@value
   914  0128  0AF3               	incf	digitalWrite@value,f
   915  0129  3000               	movlw	0
   916  012A  2182               	fcall	_digitalWrite
   917                           
   918                           ;main.c: 39: Mode=1;
   919  012B  3001               	movlw	1
   920  012C  0020               	movlb	0	; select bank0
   921  012D  00B5               	movwf	main@Mode
   922  012E  3000               	movlw	0
   923  012F  00B6               	movwf	main@Mode+1
   924                           
   925                           ;main.c: 40: break;
   926  0130  295C               	goto	l157
   927  0131                     l1116:	
   928                           ;main.c: 41: case 1:
   929                           
   930                           
   931                           ;main.c: 42: snd[0]=0xff;
   932  0131  30FF               	movlw	255
   933  0132  00B4               	movwf	??_main
   934  0133  0834               	movf	??_main,w
   935  0134  00AA               	movwf	_snd
   936                           
   937                           ;main.c: 43: switch(rcv[0]){
   938  0135  2945               	goto	l1126
   939  0136                     l1118:	
   940                           ;main.c: 44: case 0:
   941                           
   942                           
   943                           ;main.c: 45: digitalWrite((4),0);
   944  0136  01F3               	clrf	digitalWrite@value
   945  0137  3004               	movlw	4
   946  0138  2182               	fcall	_digitalWrite
   947                           
   948                           ;main.c: 46: break;
   949  0139  295C               	goto	l157
   950  013A                     l1120:	
   951                           ;main.c: 47: case 1:
   952                           
   953                           
   954                           ;main.c: 48: digitalWrite((4),1);
   955  013A  01F3               	clrf	digitalWrite@value
   956  013B  0AF3               	incf	digitalWrite@value,f
   957  013C  3004               	movlw	4
   958  013D  2182               	fcall	_digitalWrite
   959                           
   960                           ;main.c: 49: break;
   961  013E  295C               	goto	l157
   962  013F                     l1122:	
   963                           ;main.c: 50: default:
   964                           
   965                           
   966                           ;main.c: 51: snd[0]=-1;
   967  013F  30FF               	movlw	255
   968  0140  0020               	movlb	0	; select bank0
   969  0141  00B4               	movwf	??_main
   970  0142  0834               	movf	??_main,w
   971  0143  00AA               	movwf	_snd
   972                           
   973                           ;main.c: 53: }
   974                           
   975                           ;main.c: 52: break;
   976  0144  295C               	goto	l157
   977  0145                     l1126:	
   978  0145  0822               	movf	_rcv,w
   979                           
   980                           ; Switch size 1, requested type "space"
   981                           ; Number of cases is 2, Range of values is 0 to 1
   982                           ; switch strategies available:
   983                           ; Name         Instructions Cycles
   984                           ; simple_byte            7     4 (average)
   985                           ; direct_byte           10     6 (fixed)
   986                           ; jumptable            260     6 (fixed)
   987                           ;	Chosen strategy is simple_byte
   988  0146  3A00               	xorlw	0	; case 0
   989  0147  1903               	skipnz
   990  0148  2936               	goto	l1118
   991  0149  3A01               	xorlw	1	; case 1
   992  014A  1903               	skipnz
   993  014B  293A               	goto	l1120
   994  014C  293F               	goto	l1122
   995                           
   996                           ;main.c: 55: }
   997                           
   998                           ;main.c: 54: break;
   999  014D  295C               	goto	l157
  1000  014E                     l1130:	
  1001                           
  1002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1003                           ; Switch size 1, requested type "space"
  1004                           ; Number of cases is 1, Range of values is 0 to 0
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte            4     3 (average)
  1008                           ; direct_byte            8     6 (fixed)
  1009                           ; jumptable            260     6 (fixed)
  1010                           ;	Chosen strategy is simple_byte
  1011  014E  0020               	movlb	0	; select bank0
  1012  014F  0836               	movf	main@Mode+1,w
  1013  0150  3A00               	xorlw	0	; case 0
  1014  0151  1903               	skipnz
  1015  0152  2954               	goto	l1168
  1016  0153  295C               	goto	l157
  1017  0154                     l1168:	
  1018                           
  1019                           ; Switch size 1, requested type "space"
  1020                           ; Number of cases is 2, Range of values is 0 to 1
  1021                           ; switch strategies available:
  1022                           ; Name         Instructions Cycles
  1023                           ; simple_byte            7     4 (average)
  1024                           ; direct_byte           10     6 (fixed)
  1025                           ; jumptable            260     6 (fixed)
  1026                           ;	Chosen strategy is simple_byte
  1027  0154  0835               	movf	main@Mode,w
  1028  0155  3A00               	xorlw	0	; case 0
  1029  0156  1903               	skipnz
  1030  0157  2923               	goto	l1110
  1031  0158  3A01               	xorlw	1	; case 1
  1032  0159  1903               	skipnz
  1033  015A  2931               	goto	l1116
  1034  015B  295C               	goto	l157
  1035  015C                     l157:	
  1036                           
  1037                           ;main.c: 56: GIE=1;
  1038  015C  178B               	bsf	11,7	;volatile
  1039  015D  291C               	goto	l1106
  1040  015E                     __end_of_main:	
  1041                           
  1042                           	psect	text1
  1043  006E                     __ptext1:	
  1044 ;; *************** function _pinMode *****************
  1045 ;; Defined at:
  1046 ;;		line 4 in file "io.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  pin             1    wreg     unsigned char 
  1049 ;;  mode            1    8[COMMON] unsigned char 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  pin             1    1[BANK0 ] unsigned char 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1
  1061 ;;      Params:         1       0       0
  1062 ;;      Locals:         0       1       0
  1063 ;;      Temps:          0       1       0
  1064 ;;      Totals:         1       2       0
  1065 ;;Total ram usage:        3 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    2
  1068 ;; This function calls:
  1069 ;;		_delay_us
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _pinMode
  1077  006E                     _pinMode:	
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in _pinMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1081                           ;pinMode@pin stored from wreg
  1082  006E  0020               	movlb	0	; select bank0
  1083  006F  00B3               	movwf	pinMode@pin
  1084                           
  1085                           ;io.c: 5: LATA = LATA & ~(1 << pin);
  1086  0070  3001               	movlw	1
  1087  0071  00B2               	movwf	??_pinMode
  1088  0072  0A33               	incf	pinMode@pin,w
  1089  0073  2875               	goto	u564
  1090  0074                     u565:	
  1091  0074  35B2               	lslf	??_pinMode,f
  1092  0075                     u564:	
  1093  0075  0B89               	decfsz	9,f
  1094  0076  2874               	goto	u565
  1095  0077  0832               	movf	??_pinMode,w
  1096  0078  3AFF               	xorlw	255
  1097  0079  0022               	movlb	2	; select bank2
  1098  007A  050C               	andwf	12,w	;volatile
  1099  007B  008C               	movwf	12	;volatile
  1100                           
  1101                           ;io.c: 6: switch (mode) {
  1102  007C  28EC               	goto	l1086
  1103  007D                     l1070:	
  1104                           ;io.c: 7: case 0x01:
  1105                           
  1106                           
  1107                           ;io.c: 8: TRISA = TRISA | (1 << pin);
  1108  007D  3001               	movlw	1
  1109  007E  0020               	movlb	0	; select bank0
  1110  007F  00B2               	movwf	??_pinMode
  1111  0080  0A33               	incf	pinMode@pin,w
  1112  0081  2883               	goto	u574
  1113  0082                     u575:	
  1114  0082  35B2               	lslf	??_pinMode,f
  1115  0083                     u574:	
  1116  0083  0B89               	decfsz	9,f
  1117  0084  2882               	goto	u575
  1118  0085  0832               	movf	??_pinMode,w
  1119  0086  0021               	movlb	1	; select bank1
  1120  0087  040C               	iorwf	12,w	;volatile
  1121  0088  008C               	movwf	12	;volatile
  1122                           
  1123                           ;io.c: 9: ANSELA = ANSELA & (~(1 << pin));
  1124  0089  3001               	movlw	1
  1125  008A  0020               	movlb	0	; select bank0
  1126  008B  00B2               	movwf	??_pinMode
  1127  008C  0A33               	incf	pinMode@pin,w
  1128  008D  288F               	goto	u584
  1129  008E                     u585:	
  1130  008E  35B2               	lslf	??_pinMode,f
  1131  008F                     u584:	
  1132  008F  0B89               	decfsz	9,f
  1133  0090  288E               	goto	u585
  1134  0091  0832               	movf	??_pinMode,w
  1135  0092  3AFF               	xorlw	255
  1136  0093  0023               	movlb	3	; select bank3
  1137  0094  050C               	andwf	12,w	;volatile
  1138  0095  008C               	movwf	12	;volatile
  1139                           
  1140                           ;io.c: 10: break;
  1141  0096  0008               	return
  1142  0097                     l1072:	
  1143                           ;io.c: 11: case 0x04:
  1144                           
  1145                           
  1146                           ;io.c: 12: TRISA = TRISA & (~(1 << pin));
  1147  0097  3001               	movlw	1
  1148  0098  0020               	movlb	0	; select bank0
  1149  0099  00B2               	movwf	??_pinMode
  1150  009A  0A33               	incf	pinMode@pin,w
  1151  009B  289D               	goto	u594
  1152  009C                     u595:	
  1153  009C  35B2               	lslf	??_pinMode,f
  1154  009D                     u594:	
  1155  009D  0B89               	decfsz	9,f
  1156  009E  289C               	goto	u595
  1157  009F  0832               	movf	??_pinMode,w
  1158  00A0  3AFF               	xorlw	255
  1159  00A1  0021               	movlb	1	; select bank1
  1160  00A2  050C               	andwf	12,w	;volatile
  1161  00A3  008C               	movwf	12	;volatile
  1162                           
  1163                           ;io.c: 13: ANSELA = ANSELA & (~(1 << pin));
  1164  00A4  3001               	movlw	1
  1165  00A5  0020               	movlb	0	; select bank0
  1166  00A6  00B2               	movwf	??_pinMode
  1167  00A7  0A33               	incf	pinMode@pin,w
  1168  00A8  28AA               	goto	u604
  1169  00A9                     u605:	
  1170  00A9  35B2               	lslf	??_pinMode,f
  1171  00AA                     u604:	
  1172  00AA  0B89               	decfsz	9,f
  1173  00AB  28A9               	goto	u605
  1174  00AC  0832               	movf	??_pinMode,w
  1175  00AD  3AFF               	xorlw	255
  1176  00AE  0023               	movlb	3	; select bank3
  1177  00AF  050C               	andwf	12,w	;volatile
  1178  00B0  008C               	movwf	12	;volatile
  1179                           
  1180                           ;io.c: 14: break;
  1181  00B1  0008               	return
  1182  00B2                     l1074:	
  1183                           ;io.c: 15: case 0x03:
  1184                           
  1185                           
  1186                           ;io.c: 16: TRISA = TRISA | (1 << pin);
  1187  00B2  3001               	movlw	1
  1188  00B3  0020               	movlb	0	; select bank0
  1189  00B4  00B2               	movwf	??_pinMode
  1190  00B5  0A33               	incf	pinMode@pin,w
  1191  00B6  28B8               	goto	u614
  1192  00B7                     u615:	
  1193  00B7  35B2               	lslf	??_pinMode,f
  1194  00B8                     u614:	
  1195  00B8  0B89               	decfsz	9,f
  1196  00B9  28B7               	goto	u615
  1197  00BA  0832               	movf	??_pinMode,w
  1198  00BB  0021               	movlb	1	; select bank1
  1199  00BC  040C               	iorwf	12,w	;volatile
  1200  00BD  008C               	movwf	12	;volatile
  1201                           
  1202                           ;io.c: 17: ANSELA = ANSELA | ((1 << pin));
  1203  00BE  3001               	movlw	1
  1204  00BF  0020               	movlb	0	; select bank0
  1205  00C0  00B2               	movwf	??_pinMode
  1206  00C1  0A33               	incf	pinMode@pin,w
  1207  00C2  28C4               	goto	u624
  1208  00C3                     u625:	
  1209  00C3  35B2               	lslf	??_pinMode,f
  1210  00C4                     u624:	
  1211  00C4  0B89               	decfsz	9,f
  1212  00C5  28C3               	goto	u625
  1213  00C6  0832               	movf	??_pinMode,w
  1214  00C7  0023               	movlb	3	; select bank3
  1215  00C8  040C               	iorwf	12,w	;volatile
  1216  00C9  008C               	movwf	12	;volatile
  1217                           
  1218                           ;io.c: 18: ADCON1 = 0b00010011 ;
  1219  00CA  3013               	movlw	19
  1220  00CB  0021               	movlb	1	; select bank1
  1221  00CC  009E               	movwf	30	;volatile
  1222                           
  1223                           ;io.c: 19: ADCON0 = ADCON0 | 0x01 | ((pin<<3)) ;
  1224  00CD  0020               	movlb	0	; select bank0
  1225  00CE  0833               	movf	pinMode@pin,w
  1226  00CF  00B2               	movwf	??_pinMode
  1227  00D0  3002               	movlw	2
  1228  00D1                     u635:	
  1229  00D1  35B2               	lslf	??_pinMode,f
  1230  00D2  3EFF               	addlw	-1
  1231  00D3  1D03               	skipz
  1232  00D4  28D1               	goto	u635
  1233  00D5  3532               	lslf	??_pinMode,w
  1234  00D6  0021               	movlb	1	; select bank1
  1235  00D7  041D               	iorwf	29,w	;volatile
  1236  00D8  3801               	iorlw	1
  1237  00D9  009D               	movwf	29	;volatile
  1238                           
  1239                           ;io.c: 20: PORTA = PORTA & (~(1 << pin));
  1240  00DA  3001               	movlw	1
  1241  00DB  0020               	movlb	0	; select bank0
  1242  00DC  00B2               	movwf	??_pinMode
  1243  00DD  0A33               	incf	pinMode@pin,w
  1244  00DE  28E0               	goto	u644
  1245  00DF                     u645:	
  1246  00DF  35B2               	lslf	??_pinMode,f
  1247  00E0                     u644:	
  1248  00E0  0B89               	decfsz	9,f
  1249  00E1  28DF               	goto	u645
  1250  00E2  0832               	movf	??_pinMode,w
  1251  00E3  3AFF               	xorlw	255
  1252  00E4  050C               	andwf	12,w	;volatile
  1253  00E5  008C               	movwf	12	;volatile
  1254                           
  1255                           ;io.c: 21: delay_us(5);
  1256  00E6  3005               	movlw	5
  1257  00E7  00F3               	movwf	delay_us@time
  1258  00E8  3000               	movlw	0
  1259  00E9  00F4               	movwf	delay_us@time+1
  1260  00EA  21D2               	fcall	_delay_us
  1261                           
  1262                           ;io.c: 23: }
  1263                           
  1264                           ;io.c: 22: break;
  1265  00EB  0008               	return
  1266  00EC                     l1086:	
  1267  00EC  0878               	movf	pinMode@mode,w
  1268                           
  1269                           ; Switch size 1, requested type "space"
  1270                           ; Number of cases is 3, Range of values is 1 to 4
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte           10     6 (average)
  1274                           ; direct_byte           17     9 (fixed)
  1275                           ; jumptable            263     9 (fixed)
  1276                           ;	Chosen strategy is simple_byte
  1277  00ED  3A01               	xorlw	1	; case 1
  1278  00EE  1903               	skipnz
  1279  00EF  287D               	goto	l1070
  1280  00F0  3A02               	xorlw	2	; case 3
  1281  00F1  1903               	skipnz
  1282  00F2  28B2               	goto	l1074
  1283  00F3  3A07               	xorlw	7	; case 4
  1284  00F4  1903               	skipnz
  1285  00F5  2897               	goto	l1072
  1286  00F6  28F7               	goto	l113
  1287  00F7                     l113:	
  1288  00F7  0008               	return
  1289  00F8                     __end_of_pinMode:	
  1290                           
  1291                           	psect	text2
  1292  01D2                     __ptext2:	
  1293 ;; *************** function _delay_us *****************
  1294 ;; Defined at:
  1295 ;;		line 10 in file "delay.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  time            2    3[COMMON] int 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  i               2    6[COMMON] int 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1
  1309 ;;      Params:         2       0       0
  1310 ;;      Locals:         2       0       0
  1311 ;;      Temps:          1       0       0
  1312 ;;      Totals:         5       0       0
  1313 ;;Total ram usage:        5 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    1
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_pinMode
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           
  1324                           ;psect for function _delay_us
  1325  01D2                     _delay_us:	
  1326                           
  1327                           ;delay.c: 11: int i;
  1328                           ;delay.c: 12: for(i=0;i<time;i++){
  1329                           
  1330                           ;incstack = 0
  1331                           ; Regs used in _delay_us: [wreg+status,2]
  1332  01D2  01F6               	clrf	delay_us@i
  1333  01D3  01F7               	clrf	delay_us@i+1
  1334  01D4                     l82:	
  1335  01D4  0877               	movf	delay_us@i+1,w
  1336  01D5  3A80               	xorlw	128
  1337  01D6  00F5               	movwf	??_delay_us
  1338  01D7  0874               	movf	delay_us@time+1,w
  1339  01D8  3A80               	xorlw	128
  1340  01D9  0275               	subwf	??_delay_us,w
  1341  01DA  1D03               	skipz
  1342  01DB  29DE               	goto	u555
  1343  01DC  0873               	movf	delay_us@time,w
  1344  01DD  0276               	subwf	delay_us@i,w
  1345  01DE                     u555:	
  1346  01DE  1803               	btfsc	3,0
  1347  01DF  0008               	return
  1348                           
  1349                           ;delay.c: 13: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1350  01E0  3200               	nop2	;2 cycle nop
  1351  01E1  3001               	movlw	1
  1352  01E2  07F6               	addwf	delay_us@i,f
  1353  01E3  3000               	movlw	0
  1354  01E4  3DF7               	addwfc	delay_us@i+1,f
  1355  01E5  29D4               	goto	l82
  1356  01E6                     __end_of_delay_us:	
  1357                           
  1358                           	psect	text3
  1359  01EC                     __ptext3:	
  1360 ;; *************** function _initOSCCON *****************
  1361 ;; Defined at:
  1362 ;;		line 5 in file "osccon.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1
  1376 ;;      Params:         0       0       0
  1377 ;;      Locals:         0       0       0
  1378 ;;      Temps:          1       0       0
  1379 ;;      Totals:         1       0       0
  1380 ;;Total ram usage:        1 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _initOSCCON
  1392  01EC                     _initOSCCON:	
  1393                           
  1394                           ;osccon.c: 11: OSCCON|=0b01110010;
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in _initOSCCON: [wreg+status,2+status,0]
  1398  01EC  3072               	movlw	114
  1399  01ED  00F3               	movwf	??_initOSCCON
  1400  01EE  0873               	movf	??_initOSCCON,w
  1401  01EF  0021               	movlb	1	; select bank1
  1402  01F0  0499               	iorwf	25,f	;volatile
  1403  01F1  0008               	return
  1404  01F2                     __end_of_initOSCCON:	
  1405                           
  1406                           	psect	text4
  1407  01BB                     __ptext4:	
  1408 ;; *************** function _i2cReceiveCheck *****************
  1409 ;; Defined at:
  1410 ;;		line 185 in file "i2c.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  ans             2    5[COMMON] int 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  2    3[COMMON] int 
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1
  1424 ;;      Params:         2       0       0
  1425 ;;      Locals:         2       0       0
  1426 ;;      Temps:          0       0       0
  1427 ;;      Totals:         4       0       0
  1428 ;;Total ram usage:        4 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    1
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _i2cReceiveCheck
  1440  01BB                     _i2cReceiveCheck:	
  1441                           
  1442                           ;i2c.c: 186: int ans;
  1443                           ;i2c.c: 188: ans = 0;
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _i2cReceiveCheck: [wreg+status,2+status,0]
  1447  01BB  01F5               	clrf	i2cReceiveCheck@ans
  1448  01BC  01F6               	clrf	i2cReceiveCheck@ans+1
  1449                           
  1450                           ;i2c.c: 189: if (rcv_flg != 0) {
  1451  01BD  0020               	movlb	0	; select bank0
  1452  01BE  0820               	movf	_rcv_flg,w
  1453  01BF  0421               	iorwf	_rcv_flg+1,w
  1454  01C0  1903               	btfsc	3,2
  1455  01C1  29CD               	goto	l902
  1456                           
  1457                           ;i2c.c: 190: if ((SSP1STATbits.S == 0) && (SSP1STATbits.P == 1)) {
  1458  01C2  0024               	movlb	4	; select bank4
  1459  01C3  1D94               	btfss	20,3	;volatile
  1460  01C4  1E14               	btfss	20,4	;volatile
  1461  01C5  29CD               	goto	l902
  1462                           
  1463                           ;i2c.c: 191: ans = rcv_flg;
  1464  01C6  0020               	movlb	0	; select bank0
  1465  01C7  0821               	movf	_rcv_flg+1,w
  1466  01C8  00F6               	movwf	i2cReceiveCheck@ans+1
  1467  01C9  0820               	movf	_rcv_flg,w
  1468  01CA  00F5               	movwf	i2cReceiveCheck@ans
  1469                           
  1470                           ;i2c.c: 192: rcv_flg = 0;
  1471  01CB  01A0               	clrf	_rcv_flg
  1472  01CC  01A1               	clrf	_rcv_flg+1
  1473  01CD                     l902:	
  1474                           
  1475                           ;i2c.c: 193: }
  1476                           ;i2c.c: 194: }
  1477                           ;i2c.c: 195: return (ans);
  1478  01CD  0876               	movf	i2cReceiveCheck@ans+1,w
  1479  01CE  00F4               	movwf	?_i2cReceiveCheck+1
  1480  01CF  0875               	movf	i2cReceiveCheck@ans,w
  1481  01D0  00F3               	movwf	?_i2cReceiveCheck
  1482  01D1  0008               	return
  1483  01D2                     __end_of_i2cReceiveCheck:	
  1484                           
  1485                           	psect	text5
  1486  015E                     __ptext5:	
  1487 ;; *************** function _i2cInit *****************
  1488 ;; Defined at:
  1489 ;;		line 166 in file "i2c.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  address         2    3[COMMON] int 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1
  1503 ;;      Params:         2       0       0
  1504 ;;      Locals:         0       0       0
  1505 ;;      Temps:          1       0       0
  1506 ;;      Totals:         3       0       0
  1507 ;;Total ram usage:        3 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _i2cInit
  1519  015E                     _i2cInit:	
  1520                           
  1521                           ;i2c.c: 167: SSP1STAT = 0b10000000;
  1522                           
  1523                           ;incstack = 0
  1524                           ; Regs used in _i2cInit: [wreg+status,2+status,0]
  1525  015E  3080               	movlw	128
  1526  015F  0024               	movlb	4	; select bank4
  1527  0160  0094               	movwf	20	;volatile
  1528                           
  1529                           ;i2c.c: 168: SSP1CON1 = 0b00100110;
  1530  0161  3026               	movlw	38
  1531  0162  0095               	movwf	21	;volatile
  1532                           
  1533                           ;i2c.c: 169: SSP1CON2bits.SEN = 1;
  1534  0163  1416               	bsf	22,0	;volatile
  1535                           
  1536                           ;i2c.c: 171: SSP1ADD = address << 1;
  1537  0164  3573               	lslf	i2cInit@address,w
  1538  0165  0092               	movwf	18	;volatile
  1539                           
  1540                           ;i2c.c: 172: SSP1MSK = 0b11111110;
  1541  0166  30FE               	movlw	254
  1542  0167  0093               	movwf	19	;volatile
  1543                           
  1544                           ;i2c.c: 173: SSP1IE = 1;
  1545  0168  0021               	movlb	1	; select bank1
  1546  0169  1591               	bsf	17,3	;volatile
  1547                           
  1548                           ;i2c.c: 174: BCL1IE = 1;
  1549  016A  1592               	bsf	18,3	;volatile
  1550                           
  1551                           ;i2c.c: 175: PEIE = 1;
  1552  016B  170B               	bsf	11,6	;volatile
  1553                           
  1554                           ;i2c.c: 176: GIE = 1;
  1555  016C  178B               	bsf	11,7	;volatile
  1556                           
  1557                           ;i2c.c: 177: SSP1IF = 0;
  1558  016D  0020               	movlb	0	; select bank0
  1559  016E  1191               	bcf	17,3	;volatile
  1560                           
  1561                           ;i2c.c: 178: BCL1IF = 0;
  1562  016F  1192               	bcf	18,3	;volatile
  1563                           
  1564                           ;i2c.c: 179: rcv_flg = 0;
  1565  0170  01A0               	clrf	_rcv_flg
  1566  0171  01A1               	clrf	_rcv_flg+1
  1567                           
  1568                           ;i2c.c: 180: ANSELA &= 0b11111001;
  1569  0172  30F9               	movlw	249
  1570  0173  00F5               	movwf	??_i2cInit
  1571  0174  0875               	movf	??_i2cInit,w
  1572  0175  0023               	movlb	3	; select bank3
  1573  0176  058C               	andwf	12,f	;volatile
  1574                           
  1575                           ;i2c.c: 181: TRISA |= 0b00000110;
  1576  0177  3006               	movlw	6
  1577  0178  00F5               	movwf	??_i2cInit
  1578  0179  0875               	movf	??_i2cInit,w
  1579  017A  0021               	movlb	1	; select bank1
  1580  017B  048C               	iorwf	12,f	;volatile
  1581                           
  1582                           ;i2c.c: 182: PORTA &= 0b11111001;
  1583  017C  30F9               	movlw	249
  1584  017D  00F5               	movwf	??_i2cInit
  1585  017E  0875               	movf	??_i2cInit,w
  1586  017F  0020               	movlb	0	; select bank0
  1587  0180  058C               	andwf	12,f	;volatile
  1588  0181  0008               	return
  1589  0182                     __end_of_i2cInit:	
  1590                           
  1591                           	psect	text6
  1592  0182                     __ptext6:	
  1593 ;; *************** function _digitalWrite *****************
  1594 ;; Defined at:
  1595 ;;		line 26 in file "io.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  pin             1    wreg     unsigned char 
  1598 ;;  value           1    3[COMMON] unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  pin             1    5[COMMON] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1
  1610 ;;      Params:         1       0       0
  1611 ;;      Locals:         1       0       0
  1612 ;;      Temps:          1       0       0
  1613 ;;      Totals:         3       0       0
  1614 ;;Total ram usage:        3 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _digitalWrite
  1626  0182                     _digitalWrite:	
  1627                           
  1628                           ;incstack = 0
  1629                           ; Regs used in _digitalWrite: [wreg+status,2+status,0]
  1630                           ;digitalWrite@pin stored from wreg
  1631  0182  00F5               	movwf	digitalWrite@pin
  1632                           
  1633                           ;io.c: 27: if (value) {
  1634  0183  0873               	movf	digitalWrite@value,w
  1635  0184  1903               	btfsc	3,2
  1636  0185  2992               	goto	l934
  1637                           
  1638                           ;io.c: 28: LATA = LATA | (1 << pin);
  1639  0186  3001               	movlw	1
  1640  0187  00F4               	movwf	??_digitalWrite
  1641  0188  0A75               	incf	digitalWrite@pin,w
  1642  0189  298B               	goto	u444
  1643  018A                     u445:	
  1644  018A  35F4               	lslf	??_digitalWrite,f
  1645  018B                     u444:	
  1646  018B  0B89               	decfsz	9,f
  1647  018C  298A               	goto	u445
  1648  018D  0874               	movf	??_digitalWrite,w
  1649  018E  0022               	movlb	2	; select bank2
  1650  018F  040C               	iorwf	12,w	;volatile
  1651  0190  008C               	movwf	12	;volatile
  1652                           
  1653                           ;io.c: 29: } else {
  1654  0191  0008               	return
  1655  0192                     l934:	
  1656                           
  1657                           ;io.c: 30: LATA = LATA & ~(1 << pin);
  1658  0192  3001               	movlw	1
  1659  0193  00F4               	movwf	??_digitalWrite
  1660  0194  0A75               	incf	digitalWrite@pin,w
  1661  0195  2997               	goto	u454
  1662  0196                     u455:	
  1663  0196  35F4               	lslf	??_digitalWrite,f
  1664  0197                     u454:	
  1665  0197  0B89               	decfsz	9,f
  1666  0198  2996               	goto	u455
  1667  0199  0874               	movf	??_digitalWrite,w
  1668  019A  3AFF               	xorlw	255
  1669  019B  0022               	movlb	2	; select bank2
  1670  019C  050C               	andwf	12,w	;volatile
  1671  019D  008C               	movwf	12	;volatile
  1672  019E  0008               	return
  1673  019F                     __end_of_digitalWrite:	
  1674                           
  1675                           	psect	text7
  1676  019F                     __ptext7:	
  1677 ;; *************** function _delay_ms *****************
  1678 ;; Defined at:
  1679 ;;		line 4 in file "delay.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  time            2    3[COMMON] int 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  i               2    7[COMMON] int 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1
  1693 ;;      Params:         2       0       0
  1694 ;;      Locals:         2       0       0
  1695 ;;      Temps:          2       0       0
  1696 ;;      Totals:         6       0       0
  1697 ;;Total ram usage:        6 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _delay_ms
  1709  019F                     _delay_ms:	
  1710                           
  1711                           ;delay.c: 5: int i;
  1712                           ;delay.c: 6: for(i=0;i<time;i++){
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _delay_ms: [wreg+status,2]
  1716  019F  01F7               	clrf	delay_ms@i
  1717  01A0  01F8               	clrf	delay_ms@i+1
  1718  01A1                     l76:	
  1719  01A1  0878               	movf	delay_ms@i+1,w
  1720  01A2  3A80               	xorlw	128
  1721  01A3  00F5               	movwf	??_delay_ms
  1722  01A4  0874               	movf	delay_ms@time+1,w
  1723  01A5  3A80               	xorlw	128
  1724  01A6  0275               	subwf	??_delay_ms,w
  1725  01A7  1D03               	skipz
  1726  01A8  29AB               	goto	u335
  1727  01A9  0873               	movf	delay_ms@time,w
  1728  01AA  0277               	subwf	delay_ms@i,w
  1729  01AB                     u335:	
  1730  01AB  1803               	btfsc	3,0
  1731  01AC  0008               	return
  1732                           
  1733                           ;delay.c: 7: _delay((unsigned long)((1)*(8000000/4000.0)));
  1734  01AD  3003               	movlw	3
  1735  01AE  00F6               	movwf	??_delay_ms+1
  1736  01AF  3097               	movlw	151
  1737  01B0  00F5               	movwf	??_delay_ms
  1738  01B1                     u667:	
  1739  01B1  0BF5               	decfsz	??_delay_ms,f
  1740  01B2  29B1               	goto	u667
  1741  01B3  0BF6               	decfsz	??_delay_ms+1,f
  1742  01B4  29B1               	goto	u667
  1743  01B5  3200               	nop2
  1744  01B6  3001               	movlw	1
  1745  01B7  07F7               	addwf	delay_ms@i,f
  1746  01B8  3000               	movlw	0
  1747  01B9  3DF8               	addwfc	delay_ms@i+1,f
  1748  01BA  29A1               	goto	l76
  1749  01BB                     __end_of_delay_ms:	
  1750                           
  1751                           	psect	intentry
  1752  0004                     __pintentry:	
  1753 ;; *************** function _i2cInterrupt *****************
  1754 ;; Defined at:
  1755 ;;		line 109 in file "i2c.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  x               1    2[COMMON] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1
  1769 ;;      Params:         0       0       0
  1770 ;;      Locals:         1       0       0
  1771 ;;      Temps:          2       0       0
  1772 ;;      Totals:         3       0       0
  1773 ;;Total ram usage:        3 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		Interrupt level 1
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782  0004                     _i2cInterrupt:	
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _i2cInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1786  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1787  0005  3180               	pagesel	$
  1788  0006  0020               	movlb	0	; select bank0
  1789  0007  087F               	movf	127,w
  1790  0008  00F1               	movwf	??_i2cInterrupt+1
  1791                           
  1792                           ;i2c.c: 110: char x;
  1793                           ;i2c.c: 115: if (SSP1IF == 1) {
  1794  0009  1D91               	btfss	17,3	;volatile
  1795  000A  285B               	goto	i1l47
  1796                           
  1797                           ;i2c.c: 116: if (SSP1STATbits.R_nW == 0) {
  1798  000B  0024               	movlb	4	; select bank4
  1799  000C  1914               	btfsc	20,2	;volatile
  1800  000D  282E               	goto	i1l48
  1801                           
  1802                           ;i2c.c: 118: if (SSP1STATbits.D_nA == 0) {
  1803  000E  1A94               	btfsc	20,5	;volatile
  1804  000F  281C               	goto	i1l948
  1805                           
  1806                           ;i2c.c: 120: Rdtp = (char *) rcv;
  1807  0010  3022               	movlw	(low (_rcv| 0))& (0+255)
  1808  0011  00F0               	movwf	??_i2cInterrupt
  1809  0012  0870               	movf	??_i2cInterrupt,w
  1810  0013  00F9               	movwf	_Rdtp
  1811                           
  1812                           ;i2c.c: 121: x = SSP1BUF;
  1813  0014  0811               	movf	17,w	;volatile
  1814  0015  00F0               	movwf	??_i2cInterrupt
  1815  0016  0870               	movf	??_i2cInterrupt,w
  1816  0017  00F2               	movwf	i2cInterrupt@x
  1817                           
  1818                           ;i2c.c: 122: rcv_flg = 0;
  1819  0018  0020               	movlb	0	; select bank0
  1820  0019  01A0               	clrf	_rcv_flg
  1821  001A  01A1               	clrf	_rcv_flg+1
  1822                           
  1823                           ;i2c.c: 123: } else {
  1824  001B  2855               	goto	L1
  1825  001C                     i1l948:	
  1826                           
  1827                           ;i2c.c: 125: *Rdtp = SSP1BUF;
  1828  001C  0024               	movlb	4	; select bank4
  1829  001D  0811               	movf	17,w	;volatile
  1830  001E  00F0               	movwf	??_i2cInterrupt
  1831  001F  0879               	movf	_Rdtp,w
  1832  0020  0086               	movwf	6
  1833  0021  0187               	clrf	7
  1834  0022  0870               	movf	??_i2cInterrupt,w
  1835  0023  0081               	movwf	1
  1836                           
  1837                           ;i2c.c: 126: Rdtp++;
  1838  0024  3001               	movlw	1
  1839  0025  00F0               	movwf	??_i2cInterrupt
  1840  0026  0870               	movf	??_i2cInterrupt,w
  1841  0027  07F9               	addwf	_Rdtp,f
  1842                           
  1843                           ;i2c.c: 127: rcv_flg++;
  1844  0028  3001               	movlw	1
  1845  0029  0020               	movlb	0	; select bank0
  1846  002A  07A0               	addwf	_rcv_flg,f
  1847  002B  3000               	movlw	0
  1848  002C  3DA1               	addwfc	_rcv_flg+1,f
  1849  002D  2855               	goto	L1
  1850  002E                     i1l48:	
  1851                           ;i2c.c: 131: } else {
  1852                           
  1853                           ;i2c.c: 130: SSP1CON1bits.CKP = 1;
  1854                           
  1855                           ;i2c.c: 128: }
  1856                           ;i2c.c: 129: SSP1IF = 0;
  1857                           
  1858                           
  1859                           ;i2c.c: 133: if (SSP1STATbits.BF == 1) {
  1860  002E  1C14               	btfss	20,0	;volatile
  1861  002F  2841               	goto	i1l52
  1862                           
  1863                           ;i2c.c: 135: Sdtp = (char *) snd;
  1864  0030  302A               	movlw	(low (_snd| 0))& (0+255)
  1865  0031  00F0               	movwf	??_i2cInterrupt
  1866  0032  0870               	movf	??_i2cInterrupt,w
  1867  0033  00FA               	movwf	_Sdtp
  1868                           
  1869                           ;i2c.c: 136: x = SSP1BUF;
  1870  0034  0811               	movf	17,w	;volatile
  1871  0035  00F0               	movwf	??_i2cInterrupt
  1872  0036  0870               	movf	??_i2cInterrupt,w
  1873  0037  00F2               	movwf	i2cInterrupt@x
  1874  0038                     i1l960:	
  1875                           ;i2c.c: 137: while ((SSP1CON1bits.CKP) | (SSP1STATbits.BF));
  1876                           
  1877  0038  0814               	movf	20,w	;volatile
  1878  0039  3901               	andlw	1
  1879  003A  00F0               	movwf	??_i2cInterrupt
  1880  003B  0E15               	swapf	21,w	;volatile
  1881  003C  3901               	andlw	1
  1882  003D  0470               	iorwf	??_i2cInterrupt,w
  1883  003E  1D03               	btfss	3,2
  1884  003F  2838               	goto	i1l960
  1885  0040  284B               	goto	i1l974
  1886  0041                     i1l52:	
  1887                           ;i2c.c: 142: } else {
  1888                           
  1889                           ;i2c.c: 141: SSP1CON1bits.CKP = 1;
  1890                           
  1891                           ;i2c.c: 140: SSP1IF = 0;
  1892                           
  1893                           ;i2c.c: 139: Sdtp++;
  1894                           
  1895                           ;i2c.c: 138: SSP1BUF = *Sdtp;
  1896                           
  1897                           
  1898                           ;i2c.c: 144: if (SSP1CON2bits.ACKSTAT == 0) {
  1899  0041  1B16               	btfsc	22,6	;volatile
  1900  0042  2859               	goto	i1l57
  1901  0043                     i1l972:	
  1902                           ;i2c.c: 146: while ((SSP1CON1bits.CKP) | (SSP1STATbits.BF));
  1903                           
  1904  0043  0814               	movf	20,w	;volatile
  1905  0044  3901               	andlw	1
  1906  0045  00F0               	movwf	??_i2cInterrupt
  1907  0046  0E15               	swapf	21,w	;volatile
  1908  0047  3901               	andlw	1
  1909  0048  0470               	iorwf	??_i2cInterrupt,w
  1910  0049  1D03               	btfss	3,2
  1911  004A  2843               	goto	i1l972
  1912  004B                     i1l974:	
  1913                           
  1914                           ;i2c.c: 147: SSP1BUF = *Sdtp;
  1915  004B  087A               	movf	_Sdtp,w
  1916  004C  0086               	movwf	6
  1917  004D  0187               	clrf	7
  1918  004E  0801               	movf	1,w
  1919  004F  0091               	movwf	17	;volatile
  1920                           
  1921                           ;i2c.c: 148: Sdtp++;
  1922  0050  3001               	movlw	1
  1923  0051  00F0               	movwf	??_i2cInterrupt
  1924  0052  0870               	movf	??_i2cInterrupt,w
  1925  0053  07FA               	addwf	_Sdtp,f
  1926                           
  1927                           ;i2c.c: 149: SSP1IF = 0;
  1928  0054  0020               	movlb	0	; select bank0
  1929  0055                     L1:	
  1930  0055  1191               	bcf	17,3	;volatile
  1931                           
  1932                           ;i2c.c: 150: SSP1CON1bits.CKP = 1;
  1933  0056  0024               	movlb	4	; select bank4
  1934  0057  1615               	bsf	21,4	;volatile
  1935                           
  1936                           ;i2c.c: 151: } else {
  1937  0058  285B               	goto	i1l47
  1938  0059                     i1l57:	
  1939                           
  1940                           ;i2c.c: 153: SSP1IF = 0;
  1941  0059  0020               	movlb	0	; select bank0
  1942  005A  1191               	bcf	17,3	;volatile
  1943  005B                     i1l47:	
  1944                           
  1945                           ;i2c.c: 154: }
  1946                           ;i2c.c: 155: }
  1947                           ;i2c.c: 156: }
  1948                           ;i2c.c: 157: }
  1949                           ;i2c.c: 161: if (BCL1IF == 1) {
  1950  005B  0020               	movlb	0	; select bank0
  1951  005C  1992               	btfsc	18,3	;volatile
  1952                           
  1953                           ;i2c.c: 162: BCL1IF = 0;
  1954  005D  1192               	bcf	18,3	;volatile
  1955  005E  0871               	movf	??_i2cInterrupt+1,w
  1956  005F  00FF               	movwf	127
  1957  0060  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1958  0061  0009               	retfie
  1959  0062                     __end_of_i2cInterrupt:	
  1960  007E                     btemp	set	126	;btemp
  1961  007E                     int$flags	set	126
  1962  007E                     wtemp	set	126
  1963  007E                     wtemp0	set	126
  1964  0080                     wtemp1	set	128
  1965  0082                     wtemp2	set	130
  1966  0084                     wtemp3	set	132
  1967  0086                     wtemp4	set	134
  1968  0088                     wtemp5	set	136
  1969  007F                     wtemp6	set	127
  1970  007E                     ttemp	set	126
  1971  007E                     ttemp0	set	126
  1972  0081                     ttemp1	set	129
  1973  0084                     ttemp2	set	132
  1974  0087                     ttemp3	set	135
  1975  007F                     ttemp4	set	127
  1976  007E                     ltemp	set	126
  1977  007E                     ltemp0	set	126
  1978  0082                     ltemp1	set	130
  1979  0086                     ltemp2	set	134
  1980  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      5      23
    BANK1            32      0       0

Pointer List with Targets:

    Sdtp	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), snd(BANK0[8]), 

    Rdtp	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), rcv(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_delay_ms
    _main->_pinMode
    _pinMode->_delay_us

Critical Paths under _i2cInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pinMode

Critical Paths under _i2cInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _i2cInterrupt in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1139
                                              2 BANK0      3     3      0
                           _delay_ms
                       _digitalWrite
                            _i2cInit
                    _i2cReceiveCheck
                         _initOSCCON
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _pinMode                                              3     2      1     573
                                              8 COMMON     1     0      1
                                              0 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             5     3      2     133
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _initOSCCON                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2cReceiveCheck                                      4     2      2      24
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _i2cInit                                              3     1      2      75
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _digitalWrite                                         3     2      1     331
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2      99
                                              3 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _i2cInterrupt                                         3     3      0       2
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
   _digitalWrite
   _i2cInit
   _i2cReceiveCheck
   _initOSCCON
   _pinMode
     _delay_us

 _i2cInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      22       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5      17       6       28.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      22       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Nov 14 22:54:15 2016

             __CFG_CP$OFF 0000                        l82 01D4                        l76 01A1  
                     l113 00F7                       l157 015C                       l902 01CD  
                     l934 0192                       _GIE 005F                       u335 01AB  
            __CFG_CPD$OFF 0000                       u444 018B                       u604 00AA  
                     u445 018A                       u605 00A9                       u454 0197  
                     u614 00B8                       u455 0196                       u615 00B7  
                     u624 00C4                       u625 00C3                       u555 01DE  
                     u635 00D1                       u644 00E0                       u564 0075  
                     u645 00DF                       u565 0074                       u574 0083  
                     u575 0082                       u584 008F                       u585 008E  
                     u594 009D                       u667 01B1                       u595 009C  
                     _rcv 0022                       _snd 002A              __CFG_BORV$HI 0000  
                     wreg 0009              __CFG_LVP$OFF 0000                      l1110 0123  
                    l1120 013A                      l1122 013F                      l1130 014E  
                    l1106 011C                      l1116 0131                      l1070 007D  
                    l1118 0136                      l1126 0145                      l1072 0097  
                    l1074 00B2                      l1086 00EC                      l1168 0154  
          ??_i2cInterrupt 0070                      _LATA 010C                      _PEIE 005E  
                    i1l52 0041                      i1l47 005B                      i1l48 002E  
                    i1l57 0059              __CFG_WRT$OFF 0000                      _Rdtp 0079  
                    _Sdtp 007A                      _main 00F8                      fsr0h 0005  
                    fsr1h 0007                      fsr0l 0004                      indf0 0000  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0062  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
           i2cInterrupt@x 0072           __end_of_i2cInit 0182                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     i1l960 0038                     i1l972 0043  
                   i1l948 001C                     i1l974 004B                     _PORTA 000C  
                   _TRISA 008C             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
         __end_of_pinMode 00F8                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
          __CFG_MCLRE$OFF 0000      __end_of_digitalWrite 019F           __initialization 0063  
            __end_of_main 015E                    ??_main 0034            __CFG_PLLEN$OFF 0000  
                  _BCL1IE 0493                    _BCL1IF 0093                    _ADCON0 009D  
                  _ADCON1 009E                    _ADRESH 009C                    _ADRESL 009B  
__size_of_i2cReceiveCheck 0017                    _ANSELA 018C                    _OSCCON 0099  
                  _SSP1IE 048B                    _SSP1IF 008B                 ??_i2cInit 0075  
        __end_of_delay_ms 01BB          __end_of_delay_us 01E6            __CFG_STVREN$ON 0000  
    __end_of_i2cInterrupt 0062                 ??_pinMode 0032   __end_of__initialization 006B  
             pinMode@mode 0078            __pcstackCOMMON 0070                __pbssBANK0 0020  
   __size_of_digitalWrite 001D         ??_i2cReceiveCheck 0075                __pmaintext 00F8  
              __pintentry 0004                 ?_delay_ms 0073                 ?_delay_us 0073  
            _digitalWrite 0182                   _SSP1ADD 0212                   _SSP1BUF 0211  
                 _SSP1MSK 0213                   _i2cInit 015E                _initOSCCON 01EC  
   __size_of_i2cInterrupt 005E                   __ptext1 006E                   __ptext2 01D2  
                 __ptext3 01EC                   __ptext4 01BB                   __ptext5 015E  
                 __ptext6 0182                   __ptext7 019F                   _pinMode 006E  
                 _rcv_flg 0020                ??_delay_ms 0075                ??_delay_us 0075  
                 clrloop0 01E7      end_of_initialization 006B              _i2cInterrupt 0004  
        __CFG_FOSC$INTOSC 0000               ?_initOSCCON 0070       start_initialization 0063  
         _i2cReceiveCheck 01BB       __size_of_initOSCCON 0006               __pbssCOMMON 0079  
               ___latbits 0000             __pcstackBANK0 0032                pinMode@pin 0033  
       __size_of_delay_ms 001C         __size_of_delay_us 0014                  ?_i2cInit 0073  
 __end_of_i2cReceiveCheck 01D2                  ?_pinMode 0078                 delay_ms@i 0077  
               delay_us@i 0076                 clear_ram0 01E6                  _GO_nDONE 04E9  
                _SSP1CON1 0215        i2cReceiveCheck@ans 0075                  _SSP1STAT 0214  
            delay_ms@time 0073              delay_us@time 0073              ??_initOSCCON 0073  
        __size_of_i2cInit 0024          ?_i2cReceiveCheck 0073        __end_of_initOSCCON 01F2  
                _delay_ms 019F                  _delay_us 01D2          __size_of_pinMode 008A  
            _SSP1CON1bits 0215              _SSP1CON2bits 0216             __size_of_main 0066  
                int$flags 007E                  main@Mode 0035              _SSP1STATbits 0214  
           ?_digitalWrite 0073                  intlevel1 0000         digitalWrite@value 0073  
       __CFG_CLKOUTEN$OFF 0000            ??_digitalWrite 0074            i2cInit@address 0073  
         digitalWrite@pin 0075             ?_i2cInterrupt 0070  
